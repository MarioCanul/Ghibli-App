{"version":3,"sources":["reducer/ghibliReducer.js","hooks/useLoading.js","reducer/GhibliContext.js","components/cards/GhibliCard.js","components/GhilbliGrid.js","components/GhibliApp.js","assets/img/logo.svg","components/Search.js","components/GhibliHeader.js","components/cards/CardEspecies.js","components/cards/CardLocations.js","components/cards/CardPeople.js","components/cards/CardVehicles.js","components/BackFilms.js","components/NoData.js","components/RedirectComponentType.js","helper/GetUrlByIdFilm.js","helper/GetPeopleByIdFIlm.js","helper/GetEspecieByIdFIlm.js","helper/GetCarsByIdFilm.js","helper/GetLocationByUrlFilm.js","router/GhibliRouter.js","App.js","index.js"],"names":["GhibliReducer","state","action","type","localStorage","setItem","JSON","stringify","payload","data","parse","getItem","init","movies","vehicle","especies","locations","people","loading","error","GhibliContext","createContext","GhibliCard","id","title","original_title","original_title_romanised","description","director","producer","release_date","running_time","rt_score","url","className","to","GhilbliGrid","useContext","films","dispatch","length","onClick","map","item","GhibliApp","style","Menu","borderRadius","boxShadow","background","padding","fontSize","position","overflow","maxHeight","input","Search","history","useHistory","personas","vehiculos","useState","search","setSearch","onSubmit","e","preventDefault","FilmSelected","filter","m","push","wrapperStyle","root","inputProps","menuStyle","getItemValue","items","renderItem","isHighlighted","shouldItemRender","value","toLowerCase","indexOf","onChange","target","onSelect","val","GhibliHeader","src","logo","alt","CardEspecies","name","classification","eye_colors","hair_colors","urlFilm","peliculas","CardLocations","surface_water","terrain","residents","climate","filtered","split","Boolean","i","TraerPersonas","CardPeople","gender","age","eye_color","hair_color","species","namePelicula","showPelicula","film","TraerPeliculas","showEspecie","especie","TraerEspecies","CardVehicles","pilot","vehicle_class","PilotoInfo","find","TraerPiloto","BackFilms","goBack","NoData","RedirectComponentType","useParams","tipo","movie","undefined","GetUrlByIdFilm","filmspeople","FilmPersonas","person","verificarPelicula","console","log","GetPeopleByIdFIlm","filmsEspecie","Especiefilm","GetEspecieByIdFIlm","car","Filmlocations","LugaresDeLaPelicula","GetLocationByUrlFilm","ShowComponent","GhibliRouter","exact","path","component","App","useReducer","useEffect","urls","Peticiones","index","element","axios","get","Promise","all","then","results","useLoading","Provider","ReactDOM","render","document","getElementById"],"mappings":"+NAAaA,EAAgB,WAAsB,IAArBC,EAAoB,uDAAd,GAAGC,EAAW,uCAE9C,OAAQA,EAAOC,MACZ,IAAK,UAEL,OADIC,aAAaC,QAAQ,OAAOC,KAAKC,UAAL,eAAoBL,EAAOM,WAC3D,eACIN,EAAOM,SAEX,IAAK,SAER,OAAO,eACAN,EAAOM,SAEd,IAAK,kBACD,IAAMC,EAAKH,KAAKI,MAAMN,aAAaO,QAAQ,SAC5C,sBACGF,GAEF,QACI,OAAQR,IChBdW,EAAO,WAET,OACEN,KAAKI,MAAMN,aAAaO,QAAQ,UAAY,CAC1CE,OAAQ,KACRC,QAAQ,KACRC,SAAU,KACVC,UAAW,KACXC,OAAQ,KACRC,SAAS,EACTC,OAAO,ICXFC,EAAgBC,0B,qBCChBC,EAAa,SAAC,GAcpB,IAbJC,EAaG,EAbHA,GACCC,EAYE,EAZFA,MACAC,EAWE,EAXFA,eACAC,EAUE,EAVFA,yBACAC,EASE,EATFA,YACAC,EAQE,EARFA,SACAC,EAOE,EAPFA,SACAC,EAME,EANFA,aACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,SAIE,EAHFf,OAGE,EAFFgB,IAIA,OACI,sBAAKC,UAAU,kDAAf,UAEQ,sBAAKA,UAAU,cAAf,UACA,6BAAKV,IACL,6BAAKC,IACL,6BAAKC,IACL,0BAEA,sBAAKQ,UAAU,YAAf,UACA,4BAAIP,IACJ,6BAAKC,OAEL,uBACA,sBAAKM,UAAU,yBAAf,UACI,cAAC,IAAD,CAAMA,UAAU,0BAChBC,GAAE,gBAAWZ,EAAX,IAAiB,WAAjB,YAA+BC,GADjC,sBAKA,cAAC,IAAD,CAAMU,UAAU,2BAChBC,GAAE,gBAAWZ,EAAX,IAAiB,WAAjB,YAA+BC,GADjC,sBAKA,cAAC,IAAD,CAAMU,UAAU,2BAChBC,GAAE,gBAAWZ,EAAX,IAAiB,UAAjB,YAA8BC,GADhC,qBAKA,cAAC,IAAD,CAAMU,UAAU,2BAChBC,GAAE,gBAAWZ,EAAX,IAAiB,SAAjB,YAA6BC,GAD/B,0BAMJ,uBACA,sBAAKU,UAAU,mBAAf,UACI,gCACA,4CAAeL,KAEf,8CAAiBC,QAExB,gCACA,2CAAcC,KAEV,0CAAaC,eC5DjBI,EAAc,WACvB,MAAyBC,qBAAWjB,GAA7BkB,EAAP,EAAOA,MAAMC,EAAb,EAAaA,SACN1B,EAAgByB,EAAhBzB,OAAOK,EAASoB,EAATpB,QASd,OACI,qCAEU,IAAhBL,EAAO2B,OACT,qBAAKN,UAAU,YAAf,SAA2B,wBAAQO,QAZD,WAC1BF,EAAS,CACLpC,KAAK,kBACLK,QAAS,QASgD0B,UAAU,kBAApD,wCAA8G,GAGjI,qBAAKA,UAAU,cAAf,SAIEhB,EAAU,6CACVL,EAAO6B,KAAI,SAAAC,GAAI,OAET,cAAC,EAAD,eACYA,GADKA,EAAKpB,aCzBzBqB,EAAY,WACrB,OACI,mCACA,cAAC,EAAD,OCRO,MAA0B,iC,iBCInCC,EAAQ,CACZC,KAAM,CACJC,aAAc,MACdC,UAAW,gCACXC,WAAY,2BACZC,QAAS,QACTC,SAAU,MACVC,SAAU,QACVC,SAAU,OACVC,UAAW,QAEbC,MAAO,CACLrB,UAAW,gBAGFsB,EAAS,WACpB,IAAMC,EAAUC,cAChB,EAA4BrB,qBAAWjB,GAA/BkB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SACP1B,EACNyB,EADMzB,OAAQE,EACduB,EADcvB,SAAUC,EACxBsB,EADwBtB,UAAWG,EACnCmB,EADmCnB,MAAOD,EAC1CoB,EAD0CpB,QAASyC,EACnDrB,EADmDqB,SAAUC,EAC7DtB,EAD6DsB,UAE/D,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAqBA,OACE,mCACE,uBAAM7B,UAAU,cAAc8B,SAtBf,SAACC,GAClBA,EAAEC,iBACF,IAAMC,EAAetD,EAAOuD,QAAO,SAACC,GAAD,OAAOA,EAAE7C,QAAUsC,KAC5B,IAAtBK,EAAa3B,SACfD,EAAS,CACPpC,KAAM,SACNK,QAAS,CACPK,OAAQsD,EACRpD,WACA4C,WACAC,YACA5C,YACAE,UACAC,WAGJ4C,EAAU,IACVN,EAAQa,KAAK,OAKb,UACE,cAAC,IAAD,CACEC,aAAc1B,EAAM2B,KACpBC,WAAY5B,EAAMU,MAClBmB,UAAW7B,EAAMC,KACjB6B,aAAc,SAAChC,GAAD,OAAUA,EAAKnB,OAC7BoD,MAAO/D,EACPgE,WAAY,SAAClC,EAAMmC,GACjB,OACE,qBAEEjC,MAAO,CAAEI,WAAY6B,EAAgB,YAAc,SAFrD,SAIGnC,EAAKnB,OAHDmB,EAAKpB,KAOhBwD,iBAAkB,SAACpC,EAAMqC,GAAP,OAChBrC,EAAKnB,MAAMyD,cAAcC,QAAQF,EAAMC,gBAAkB,GAE3DD,MAAOlB,EACPqB,SAAU,SAAClB,GAAD,OAAOF,EAAUE,EAAEmB,OAAOJ,QACpCK,SAAU,SAACC,GAAD,OAASvB,EAAUuB,MAE/B,wBAAQpD,UAAU,kBAAkB/B,KAAK,SAAzC,0BCnEKoF,EAAe,WAC1B,OACE,qCACA,qBAAKrD,UAAU,cAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAKsD,IAAKC,EACVC,IAAI,oBAGR,qBAAKxD,UAAU,2BAAf,SACE,cAAC,EAAD,UCXOyD,EAAe,SAAC,GAUtB,IATLpE,EASI,EATJA,GACAqE,EAQI,EARJA,KACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,WACAC,EAKI,EALJA,YAIAC,GACI,EAJJ/E,OAII,EAHJqB,MAGI,EAFJL,IAEI,EADJ+D,SAEeC,EAAc5D,qBAAWjB,GAAhCkB,MACAqB,EAAsBsC,EAAtBtC,SAAS5C,EAAakF,EAAblF,SAwBjB,OAAOQ,EACL,sBAAKW,UAAU,iDAAf,UACE,0CAAa0D,KACb,uBACA,iDAAoBC,KACpB,uBACA,iDAAoBC,KACpB,uBACA,oDAAuBC,KACvB,uBACA,+CA/BFhF,EAAS2B,KAAI,SAAAC,GAAI,OAAEA,EAAKiD,QACEjC,EAASS,QAAO,SAACH,GAEzC,OADiBA,EAAE3B,MAAM8B,QAAO,SAACzB,GAAD,OAAUA,IAASqD,KACtCxD,OAAS,KAOCE,KAAI,SAACC,GAAD,OAC3BA,EACE,6BACE,+BAAOA,EAAKiD,QADLjD,EAAKpB,IAId,0DAgBF,0BAGF,+DClDS2E,EAAgB,SAAC,GAQvB,IAPL3E,EAOI,EAPJA,GACAqE,EAMI,EANJA,KACAO,EAKI,EALJA,cACAC,EAII,EAJJA,QACAC,EAGI,EAHJA,UACAC,EAEI,EAFJA,QAIQ3C,GAFJ,EADJqC,QAE+B3D,qBAAWjB,GAAhCkB,MACFqB,UAyBR,OAAOpC,EACL,sBAAKW,UAAU,gDAAf,UACE,0CAAa0D,KACb,uBACA,yCAAYU,KACZ,uBACA,2CAAcF,KACd,uBACA,qBAAKlE,UAAU,kBAAf,SACE,8CAjCkB,WAClB,IACIqE,EADYF,EAAU3D,KAAI,SAAAC,GAAI,OAAEA,EAAK6D,MAAM,KAAK,MAC3BpC,OAAOqC,SAC5B,OAAIF,EAAS/D,OAAO,EACImB,EAASS,QAAO,SAAAzB,GAEhC,OADY4D,EAASnC,QAAO,SAAAsC,GAAC,OAAEA,IAAI/D,EAAKpB,MAC9BiB,OAAO,KAKAE,KAAI,SAACC,GAAD,OACzBA,EACE,6BACE,+BAAOA,EAAKiD,QADLjD,EAAKpB,IAId,sDAID8E,EAYQM,QAEnB,uBACA,uDAA0BR,KAC1B,0BAGF,+DCpDSS,EACb,SAAC,GAWM,IAVHrF,EAUE,EAVFA,GACAqE,EASE,EATFA,KACAiB,EAQE,EARFA,OACAC,EAOE,EAPFA,IACAC,EAME,EANFA,UACAC,EAKE,EALFA,WACA1E,EAIE,EAJFA,MACA2E,EAGE,EAHFA,QAKahB,GAFX,EAFFhE,IAEE,EADFiF,aAG0B7E,qBAAWjB,GAA9BkB,OACAzB,EAAkBoF,EAAlBpF,OAAQE,EAAUkF,EAAVlF,SAsBf,OACKQ,EACD,sBAAKW,UAAU,iDAAf,UACI,0CAAa0D,KACb,uBACA,0CAAaiB,KACb,uBACA,2CAAWC,KACX,uBACA,iDAAoBC,KACpB,uBACA,oDAAuBC,KACvB,uBACA,4CAvBa,SAAC1E,GAClB,IAAM6E,EAAetG,EAAOuD,QAAO,SAAAgD,GAAI,OAAEA,EAAKnF,MAAMK,EAAM,MAC1D,OACI,6BACA,wCAAW6E,EAAa,GAAG3F,WAmBZ6F,CAAe/E,MAC9B,uBACA,4CApCY,SAAC2E,GACnB,IAAMK,EAAcvG,EAASqD,QAAO,SAAAmD,GAAO,OAAEA,EAAQtF,MAAMgF,KACzD,OACI,+BACA,wCAAWK,EAAY,GAAG1B,QAC1B,gDAAmB0B,EAAY,GAAGzB,kBAClC,wCAAWyB,EAAY,GAAGxB,cAC1B,2CAAcwB,EAAY,GAAGN,iBA6BdQ,CAAcP,MAC7B,0BAEJ,+DCtDKQ,EAAe,SAAC,GAQvB,IAPFlG,EAOC,EAPDA,GACAiB,EAMC,EANDA,OACAoD,EAKC,EALDA,KACA8B,EAIC,EAJDA,MACAC,EAGC,EAHDA,cACAhG,EAEC,EAFDA,YAGasE,EAAa5D,qBAAWjB,GAA9BkB,MACAqB,EAAmBsC,EAAnBtC,SAAS5C,EAAUkF,EAAVlF,SAiBhB,OACKQ,EACD,sBAAKW,UAAU,gDAAf,UACI,0CAAa0D,KACb,uBACA,yCAAYpD,KACZ,uBACA,yCAAYmF,KACZ,uBACA,qBAAKzF,UAAU,kBAAf,SAEA,+CAAkBP,OAElB,uBACA,0CA1BU,WACf,IALkBsF,EAKZW,EAAYjE,EAASS,QAAO,SAAAzB,GAAI,OAAEA,EAAKV,MAAMyF,KAClD,OACI,+BACA,wCAAWE,EAAW,GAAGhC,QACzB,2CATaqB,EAScW,EAAW,GAAGX,QAR5BlG,EAAS8G,MAAK,SAAAlF,GAAI,OAAEA,EAAKV,MAAMgF,KAC/BpB,mBAQb,wCAAW+B,EAAW,GAAGb,aACzB,2CAAca,EAAW,GAAGZ,iBAmBfc,MACb,0BAEJ,+DC5CKC,EAAY,SAAC,GAGnB,IAFHnC,EAEE,EAFFA,KACAnC,EACE,EADFA,QAGA,OACI,sBAAKvB,UAAU,aAAf,UACM,qBAAKA,UAAU,gBAAf,SACE,wBAAQA,UAAU,kBAAkBO,QAAS,kBAAIgB,EAAQuE,UAAzD,wBAEF,qBAAK9F,UAAU,aAAf,SACA,6BAAK0D,UCXNqC,EAAS,WAClB,OACI,sBAAK/F,UAAU,UAAf,UAEO,kDAEA,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,gCAAvB,0BCOFgG,EAAwB,SAAC,GAAe,IAAdzE,EAAa,EAAbA,QAErC,EAA0B0E,cAAlB5G,EAAR,EAAQA,GAAI6G,EAAZ,EAAYA,KAAKxC,EAAjB,EAAiBA,KACXI,EChBsB,SAACzE,GAC3B,IAEK8G,EAFWhG,qBAAWjB,GAApBkB,MACAzB,OACYgH,MAAK,SAAAlF,GAAI,OAAEA,EAAKpB,KAAKA,KAC5C,YAAY+G,IAARD,EAEM,KAEFA,EAAMpG,IDQGsG,CAAehH,GAChB,OAAVyE,GAAgBvC,EAAQuE,SA2E5B,OAAO,mCA1Ee,WACpB,OAAQI,GACN,IAAK,WACH,IAAMI,EEdmB,SAACjH,GAC9B,IAAOe,EAASD,qBAAWjB,GAApBkB,MACAzB,EAAkByB,EAAlBzB,OAAQ8C,EAAUrB,EAAVqB,SACV0E,EAAOxH,EAAOgH,MAAK,SAAAQ,GAAK,OAAEA,EAAM9G,KAAKA,KAErCkH,EAAa9E,EAASS,QAAO,SAAAsE,GAAM,OAAwC,IAb5D,SAACA,EAAOzG,GAEhC,OADmByG,EAAOpG,MAAM8B,QAAO,SAAAzB,GAAI,OAAEA,IAAOV,KACnCO,OAAO,EAWsBmG,CAAkBD,EAAOL,EAAMpG,QAE1E,OADA2G,QAAQC,IAAIJ,GACLA,EFOkBK,CAAkBvH,GAEtC,OACE,qCACE,cAAC,EAAD,CAAWkC,QAASA,EAASmC,KAAMA,IAElC,qBAAK1D,UAAU,aAAf,SACCsG,EAAYhG,OAAS,EAEtBgG,EAAY9F,KAAI,SAACC,GAAD,OAEd,cAAC,EAAD,eAAgCA,GAAfA,EAAKpB,OAGxB,cAAC,EAAD,SAML,IAAK,WACH,IAAMwH,EGhCkB,SAACxH,GAC/B,IAAOe,EAASD,qBAAWjB,GAApBkB,MACAzB,EAAkByB,EAAlBzB,OAAQE,EAAUuB,EAAVvB,SACVsH,EAAOxH,EAAOgH,MAAK,SAAAQ,GAAK,OAAEA,EAAM9G,KAAKA,KAE3C,OADkBR,EAASqD,QAAO,SAAAmD,GAAO,OAAqC,IAfzD,SAACA,EAAQc,GAEjC,IAAMW,EAAYzB,EAAQjF,MAAM8B,QAAO,SAAAzB,GAAI,OAAEA,IAAO0F,EAAMpG,OAE1D,OADuBoG,EAAMpB,QAAQ7C,QAAO,SAAAzB,GAAI,OAAEA,IAAO4E,EAAQtF,OAC5CO,OAAO,GAAGwG,EAAYxG,OAAO,EAWJmG,CAAkBpB,EAAQc,MH4BzCY,CAAmB1H,GACxC,OACE,qCACC,cAAC,EAAD,CAAWkC,QAASA,EAASmC,KAAMA,IACtC,qBAAK1D,UAAU,aAAf,SACG6G,EAAavG,OAAS,EACrBuG,EAAarG,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,2BAAgCA,GAAhC,IAAsCqD,QAASA,IAA5BrD,EAAKpB,OAEnD,cAAC,EAAD,SAOR,IAAK,SACH,IAAM2H,GI1DmBjH,EJ0DG+D,EIzDhB3D,qBAAWjB,GAApBkB,MACAsB,UACaQ,QAAO,SAAA8E,GAAG,OAAEA,EAAI5G,MAAM,KAAKL,MJwD3C,OACE,qCACC,cAAC,EAAD,CAAWwB,QAASA,EAASmC,KAAMA,IACpC,qBAAK1D,UAAU,aAAf,SACGgH,EAAI1G,OAAS,EACZ0G,EAAIxG,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,2BAAgCA,GAAhC,IAAsCqD,QAASA,IAA5BrD,EAAKpB,OAE1C,cAAC,EAAD,SAMR,IAAK,UACH,IAAM4H,EKhEsB,SAAClH,GAIjC,OAFgBI,qBAAWjB,GAApBkB,MACAtB,UACUoD,QAAO,SAAAzB,GAAI,OAbN,SAACA,EAAKV,GAI5B,OAFWU,EAAKL,MAAM8B,QAAO,SAAAsC,GAAC,OAAEA,IAAIzE,KAE3BO,OAAO,EASe4G,CAAoBzG,EAAKV,ML4DhCoH,CAAqBrD,GAEzC,OACA,qCACG,cAAC,EAAD,CAAWvC,QAASA,EAASmC,KAAMA,IACpC,qBAAK1D,UAAU,aAAf,SACGiH,EAAc3G,OAAS,EACtB2G,EAAczG,KAAI,SAACC,GAAD,OAAU,cAAC,EAAD,2BAAiCA,GAAjC,IAAuCqD,QAASA,IAA5BrD,EAAKpB,OAErD,cAAC,EAAD,SAMR,QACE,OAAO,cAAC,IAAD,CAAUY,GAAG,MIzFI,IAACF,EJ4FrBqH,MMvFCC,EAAe,WAE1B,OACE,mCACE,cAAC,IAAD,UACE,gCACA,cAAC,EAAD,IACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9G,IACjC,cAAC,IAAD,CAAO4G,OAAK,EAACC,KAAK,wBAAwBC,UAAWxB,IACrD,cAAC,IAAD,CAAQwB,UAAW9G,eCZlB+G,EAAM,WAClB,MrBUyB,WAEtB,MAA0BC,qBAAW5J,EAAe,GAAIY,GAAxD,mBAAO0B,EAAP,KAAcC,EAAd,KAqCA,OAnCAsH,qBAAU,WAUN,IATA,IAAMC,EAAK,CACP,yCACA,2CACA,0CACA,4CACA,8CAGAC,EAAa,GACRC,EAAQ,EAAGA,EAAQF,EAAKtH,OAAQwH,IAAS,CAC9C,IAAMC,EAAUH,EAAKE,GACrBD,EAAWzF,KACR4F,IAAMC,IAAIF,IAIfG,QAAQC,IAAIN,GACbO,MAAK,SAAUC,GAEfhI,EAAS,CACNpC,KAAM,UACNK,QAAS,CACPK,OAAQ0J,EAAQ,GAAG9J,KACnBM,SAAUwJ,EAAQ,GAAG9J,KACrBkD,SAAU4G,EAAQ,GAAG9J,KACrBmD,UAAU2G,EAAQ,GAAG9J,KACrBO,UAAWuJ,EAAQ,GAAG9J,KACtBS,SAAS,EACTC,OAAO,UAKd,IACI,CAACmB,EAAOC,GqBjDIiI,GAAtB,mBAAMlI,EAAN,KAAYC,EAAZ,KAGG,OACI,cAACnB,EAAcqJ,SAAf,CAAwBzF,MAAO,CAAC1C,QAAMC,YAAtC,SACA,cAAC,EAAD,OCNRmI,IAASC,OACL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.30c22683.chunk.js","sourcesContent":["export const GhibliReducer = (state={},action) => {\r\n\r\n    switch (action.type) {\r\n       case 'loading':\r\n           localStorage.setItem('data',JSON.stringify( {...action.payload})) \r\n       return{\r\n        ...action.payload,\r\n       };\r\n       case 'Search':\r\n       \r\n    return {\r\n        ...action.payload\r\n    }\r\n    case 'CargarLocalData':\r\n        const data=JSON.parse(localStorage.getItem(\"data\"))\r\n       return{\r\n       ...data\r\n       };\r\n        default:\r\n            return  state;\r\n    }\r\n   \r\n   }","import axios from 'axios';\r\nimport  { useEffect, useReducer} from 'react'\r\nimport { GhibliReducer } from '../reducer/ghibliReducer'\r\nconst init = () => {\r\n    \r\n    return (\r\n      JSON.parse(localStorage.getItem(\"data\")) || {\r\n        movies: null,\r\n        vehicle:null,\r\n        especies: null,\r\n        locations: null,\r\n        people: null,\r\n        loading: false,\r\n        error: false,\r\n      }\r\n    );\r\n  };\r\nexport const useLoading = () => {\r\n    \r\n    const [films, dispatch] = useReducer(GhibliReducer, {}, init)\r\n \r\n    useEffect(() => {\r\n        const urls=[\r\n            \"https://ghibliapi.herokuapp.com/films/\",\r\n            \"https://ghibliapi.herokuapp.com/species/\",\r\n            \"https://ghibliapi.herokuapp.com/people/\",\r\n            \"https://ghibliapi.herokuapp.com/vehicles/\",\r\n            \"https://ghibliapi.herokuapp.com/locations/\",\r\n\r\n        ]\r\n        let Peticiones = [];\r\n        for (let index = 0; index < urls.length; index++) {\r\n            const element = urls[index];\r\n            Peticiones.push(\r\n               axios.get(element)\r\n            );\r\n          }\r\n\r\n          Promise.all(Peticiones)\r\n        .then(function (results) {\r\n           \r\n         dispatch({\r\n            type: \"loading\",\r\n            payload: {\r\n              movies: results[0].data,\r\n              especies: results[1].data,\r\n              personas: results[2].data,\r\n              vehiculos:results[3].data,\r\n              locations: results[4].data,\r\n              loading: false,\r\n              error: false,\r\n            },\r\n          })\r\n  });\r\n\r\n    }, [])\r\n    return [films, dispatch]\r\n}\r\n","import { createContext } from \"react\";\r\n\r\nexport const GhibliContext = createContext();","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const GhibliCard = ({\r\n   id,\r\n    title,\r\n    original_title,\r\n    original_title_romanised,\r\n    description,\r\n    director,\r\n    producer,\r\n    release_date,\r\n    running_time,\r\n    rt_score,\r\n    people,\r\n    url\r\n    \r\n}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeI mt-1 mb-1'>\r\n        \r\n                <div className='card-header'>\r\n                <h2>{title}</h2>\r\n                <h3>{original_title}</h3>\r\n                <h4>{original_title_romanised}</h4>\r\n                <hr/>\r\n                </div>\r\n                <div className='card-body'>\r\n                <p>{description}</p>\r\n                <h4>{director}</h4>\r\n                </div>\r\n                <hr/>\r\n                <div className='card-ambient mb-1 mt-1'>\r\n                    <Link className='pointer btn btn-primary'\r\n                    to={`/More/${id}/${'Personas'}/${title}`}\r\n                    >\r\n                        Personas\r\n                    </Link>\r\n                    <Link className='pointer  btn btn-primary'\r\n                    to={`/More/${id}/${'Especies'}/${title}`}\r\n                    >\r\n                        Especies\r\n                    </Link>\r\n                    <Link className='pointer  btn btn-primary'\r\n                    to={`/More/${id}/${'Lugares'}/${title}`}\r\n                    >\r\n                    Lugares\r\n                    </Link>\r\n                    <Link className='pointer  btn btn-primary'\r\n                    to={`/More/${id}/${'Carros'}/${title}`}\r\n                    >\r\n                    Vehiculos\r\n                    </Link>\r\n                </div>\r\n                <hr/>\r\n                <div className='card-footer mt-5'>\r\n                    <div>\r\n                    <h5>Productor:{producer}</h5>\r\n                    \r\n                    <h5>Lanzamiento:{release_date}</h5>\r\n                    </div>\r\n             <div>\r\n             <h5>Duracion:{running_time}</h5>\r\n                 \r\n                 <h5>Puntaje:{rt_score}</h5>\r\n             </div>\r\n                  \r\n                   \r\n                    \r\n               \r\n                </div>\r\n\r\n     \r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react'\r\nimport { GhibliContext } from '../reducer/GhibliContext'\r\nimport { GhibliCard } from './cards/GhibliCard';\r\n\r\n\r\nexport const GhilbliGrid = () => {\r\n    const {films,dispatch} = useContext(GhibliContext);\r\n    const {movies,loading}=films\r\n    const CargarTodasLasPeliculas=()=>{\r\n        dispatch({\r\n            type:'CargarLocalData',\r\n            payload: null\r\n          })\r\n    }\r\n   \r\n\r\n    return (\r\n        <> \r\n           {\r\n( movies.length===1)?\r\n<div className='back-home'><button onClick={CargarTodasLasPeliculas} className='btn btn-primary'>Regresar a las peliculas</button></div>:''\r\n\r\n            }\r\n        <div className='Ghibli-Grid'>\r\n         \r\n             \r\n       {\r\n         (loading)? <h1>... loading</h1> : (\r\n          movies.map(item=>(\r\n             \r\n                <GhibliCard key={item.id}\r\n                        {...item}\r\n                        />\r\n             ))  \r\n         )\r\n       }\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nimport { GhilbliGrid } from './GhilbliGrid'\r\n\r\n\r\nexport const GhibliApp = () => {\r\n    return (\r\n        <>\r\n        <GhilbliGrid />\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo.95c5236f.svg\";","import React, { useState, useContext } from \"react\";\r\nimport Autocomplete from \"react-autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GhibliContext } from \"../reducer/GhibliContext\";\r\nconst style = {\r\n  Menu: {\r\n    borderRadius: \"3px\",\r\n    boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.1)\",\r\n    background: \"rgba(255, 255, 255, 0.9)\",\r\n    padding: \"2px 0\",\r\n    fontSize: \"90%\",\r\n    position: \"fixed\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  input: {\r\n    className: \"text-search\",\r\n  },\r\n};\r\nexport const Search = () => {\r\n  const history = useHistory();\r\n  const { films, dispatch } = useContext(GhibliContext);\r\n  const { movies, especies, locations, error, loading, personas, vehiculos } =\r\n    films;\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleItem = (e) => {\r\n    e.preventDefault();\r\n    const FilmSelected = movies.filter((m) => m.title === search);\r\n    if (FilmSelected.length!==0) {\r\n      dispatch({\r\n        type: \"Search\",\r\n        payload: {\r\n          movies: FilmSelected,\r\n          especies,\r\n          personas,\r\n          vehiculos,\r\n          locations,\r\n          loading,\r\n          error,\r\n        },\r\n      });\r\n      setSearch(\"\");\r\n      history.push('/');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"form-search\" onSubmit={handleItem}>\r\n        <Autocomplete\r\n          wrapperStyle={style.root}\r\n          inputProps={style.input}\r\n          menuStyle={style.Menu}\r\n          getItemValue={(item) => item.title}\r\n          items={movies}\r\n          renderItem={(item, isHighlighted) => {\r\n            return (\r\n              <div\r\n                key={item.id}\r\n                style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}\r\n              >\r\n                {item.title}\r\n              </div>\r\n            );\r\n          }}\r\n          shouldItemRender={(item, value) =>\r\n            item.title.toLowerCase().indexOf(value.toLowerCase()) > -1\r\n          }\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          onSelect={(val) => setSearch(val)}\r\n        />\r\n        <button className=\"btn btn-primary\" type=\"sumbit\">\r\n          Buscar\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport logo from './../assets/img/logo.svg'\r\nimport { Search } from \"./Search\";\r\n\r\nexport const GhibliHeader = () => {\r\n  return (\r\n    <>\r\n    <div className=\"header-main\">\r\n      <div className=\"header-logo\">\r\n        <img src={logo}\r\n        alt='ghibli-logo' />\r\n      </div>\r\n    </div>\r\n    <div className=\"header-search  mt-1 mb-1\">\r\n      <Search />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GhibliContext } from \"../../reducer/GhibliContext\";\r\n\r\nexport const CardEspecies = ({\r\n  id,\r\n  name,\r\n  classification,\r\n  eye_colors,\r\n  hair_colors,\r\n  people,\r\n  films,\r\n  url,\r\n  urlFilm,\r\n}) => {\r\n  const { films: peliculas } = useContext(GhibliContext);\r\n  const { personas,especies } = peliculas;\r\n\r\n  const TraerPersonas = () => {\r\n    especies.map(item=>item.name)\r\n    const personasConIdFilm = personas.filter((e) => {\r\n      const EnLaPeli = e.films.filter((item) => item === urlFilm);\r\n      if (EnLaPeli.length > 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    // const EspeciePersonajes=personasConIdFilm.filter(item=>item.species===url)\r\n    // console.log(EspeciePersonajes)\r\n    return personasConIdFilm.map((item) =>\r\n      item ? (\r\n        <ul key={item.id}>\r\n          <span>{item.name}</span>\r\n        </ul>\r\n      ) : (\r\n        <h4>NO hay personajes</h4>\r\n      )\r\n    );\r\n  };\r\n\r\n  return id ? (\r\n    <div className=\"card-people animate__animated  animate__fadeIn\">\r\n      <h3>Nombre :{name}</h3>\r\n      <hr />\r\n      <h3>Clasificacion :{classification}</h3>\r\n      <hr />\r\n      <h3>Color de ojos :{eye_colors}</h3>\r\n      <hr />\r\n      <h3>Color de Cabello :{hair_colors}</h3>\r\n      <hr />\r\n      <h3>Personajes :{TraerPersonas(people)}</h3>\r\n      <hr />\r\n    </div>\r\n  ) : (\r\n    <h1>NO Se encontraron personajes</h1>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GhibliContext } from \"../../reducer/GhibliContext\";\r\n\r\nexport const CardLocations = ({\r\n  id,\r\n  name,\r\n  surface_water,\r\n  terrain,\r\n  residents,\r\n  climate,\r\n  urlFilm,\r\n}) => {\r\n    const { films: peliculas } = useContext(GhibliContext);\r\n  const { personas } = peliculas;\r\n    const TraerPersonas = () => {\r\n        const idPersona=residents.map(item=>item.split('/')[4] )\r\n        let filtered = idPersona.filter(Boolean);\r\n            if (filtered.length>0) {\r\n                const PersonasInfor=personas.filter(item=>{\r\n                    const value=filtered.filter(i=>i===item.id)\r\n                    if (value.length>0) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                })\r\n                return PersonasInfor.map((item) =>\r\n                item ? (\r\n                  <ul key={item.id}>\r\n                    <span>{item.name}</span>\r\n                  </ul>\r\n                ) : (\r\n                  <h4>NO hay personajes</h4>\r\n                )\r\n              );\r\n            }\r\n          return residents\r\n       \r\n      };\r\n  return id ? (\r\n    <div className=\"card-carro animate__animated  animate__fadeIn\">\r\n      <h3>Nombre :{name}</h3>\r\n      <hr />\r\n      <h3>Clima :{climate}</h3>\r\n      <hr />\r\n      <h3>Terreno :{terrain}</h3>\r\n      <hr />\r\n      <div className=\"card-body-carro\">\r\n        <h3>residentes :{TraerPersonas()}</h3>\r\n      </div>\r\n      <hr />\r\n      <h3>Superficie del agua :{surface_water}</h3>\r\n      <hr />\r\n    </div>\r\n  ) : (\r\n    <h1>NO Se encontraron personajes</h1>\r\n  );\r\n};\r\n","import React, { useContext } from 'react'\r\nimport { GhibliContext } from '../../reducer/GhibliContext'\r\nexport const CardPeople = \r\n({\r\n    id,\r\n    name,\r\n    gender,\r\n    age,\r\n    eye_color,\r\n    hair_color,\r\n    films,\r\n    species,\r\n    url,\r\n    namePelicula\r\n}) => {\r\n    \r\n    const {films:peliculas} = useContext(GhibliContext)\r\n    const {movies, especies}=peliculas\r\n    const TraerEspecies=(species)=>{\r\n      const showEspecie = especies.filter(especie=>especie.url===species)\r\n        return (\r\n            <ul>\r\n            <li>Name :{showEspecie[0].name}</li>\r\n            <li>Clasificacion:{showEspecie[0].classification}</li>\r\n            <li>Ojos :{showEspecie[0].eye_colors}</li>\r\n            <li>Cabello :{showEspecie[0].hair_color}</li>\r\n            </ul>\r\n        )\r\n    }\r\n    const TraerPeliculas=(films)=>{\r\n        const showPelicula = movies.filter(film=>film.url===films[0])\r\n        return (\r\n            <ul>\r\n            <li>Name :{showPelicula[0].title}</li>\r\n            </ul>\r\n        )\r\n    }\r\n   \r\n   \r\n    return (\r\n        (id)?\r\n        <div className='card-people animate__animated  animate__fadeIn'>\r\n            <h3>Nombre :{name}</h3>\r\n            <hr/>\r\n            <h3>Genero :{gender}</h3>\r\n            <hr/>\r\n            <h3>Años :{age}</h3>\r\n            <hr/>\r\n            <h3>Color de ojos :{eye_color}</h3>\r\n            <hr/>\r\n            <h3>Color de Cabello :{hair_color}</h3>\r\n            <hr/>\r\n            <h3>Pelicula :{TraerPeliculas(films)}</h3>\r\n            <hr/>\r\n            <h3>Especies :{TraerEspecies(species)}</h3>\r\n            <hr/>\r\n        </div>:\r\n        <h1>NO Se encontraron personajes</h1>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GhibliContext } from '../../reducer/GhibliContext'\r\n\r\nexport const CardVehicles = ({\r\n    id,\r\n    length,\r\n    name,\r\n    pilot,\r\n    vehicle_class,\r\n    description,\r\n}\r\n) => {\r\n    const {films:peliculas} = useContext(GhibliContext)\r\n    const {personas,especies}=peliculas\r\n    const TraerEspecies=(species)=>{\r\n       const tipoPiloto= especies.find(item=>item.url===species)\r\n       return tipoPiloto.classification\r\n    }\r\n    const TraerPiloto=()=>{\r\n       const PilotoInfo= personas.filter(item=>item.url===pilot)\r\n        return (\r\n            <ul>\r\n            <li>Name :{PilotoInfo[0].name}</li>\r\n            <li>especie:{TraerEspecies(PilotoInfo[0].species)}</li>\r\n            <li>Ojos :{PilotoInfo[0].eye_color}</li>\r\n            <li>Cabello :{PilotoInfo[0].hair_color}</li>\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        (id)?\r\n        <div className='card-carro animate__animated  animate__fadeIn'>\r\n            <h3>Nombre :{name}</h3>\r\n            <hr/>\r\n            <h3>Largo :{length}</h3>\r\n            <hr/>\r\n            <h3>Clase :{vehicle_class}</h3>\r\n            <hr/>\r\n            <div className='card-body-carro'>\r\n\r\n            <h3>Descripcion :{description}</h3>\r\n            </div>\r\n            <hr/>\r\n            <h3>Piloto :{TraerPiloto(pilot)}</h3>\r\n            <hr/>\r\n        </div>:\r\n        <h1>NO Se encontraron personajes</h1>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport const BackFilms = ({\r\n    name,\r\n    history\r\n}) => {\r\n \r\n    return (\r\n        <div className='title-list'>\r\n              <div className='goback-button'>\r\n                <button className='btn btn-primary' onClick={()=>history.goBack()}>Regresar</button>\r\n              </div>\r\n              <div className='name-title'>\r\n              <h1>{name}</h1>\r\n              </div>\r\n           \r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NoData = () => {\r\n    return (\r\n        <div className='no-data'>\r\n\r\n               <h1>No existen Datos</h1>\r\n\r\n               <Link to=\"/\" className='btn btn-primary no-data-buton'>Regresar</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {  Redirect, useParams } from \"react-router-dom\";\r\nimport { GetCarsByUrlFilm } from \"../helper/GetCarsByIdFilm\";\r\nimport { GetEspecieByIdFIlm } from \"../helper/GetEspecieByIdFIlm\";\r\nimport { GetLocationByUrlFilm } from \"../helper/GetLocationByUrlFilm\";\r\nimport { GetPeopleByIdFIlm } from \"../helper/GetPeopleByIdFIlm\";\r\nimport { GetUrlByIdFilm } from \"../helper/GetUrlByIdFilm\";\r\nimport { CardEspecies } from \"./cards/CardEspecies\";\r\nimport { CardLocations } from \"./cards/CardLocations\";\r\nimport { CardPeople } from \"./cards/CardPeople\";\r\nimport { CardVehicles } from \"./cards/CardVehicles\";\r\nimport { BackFilms } from \"./BackFilms\";\r\nimport { NoData } from \"./NoData\";\r\n\r\n\r\n//redireccionamiento y carga de datos para las cards\r\nexport const RedirectComponentType = ({history}) => {\r\n  \r\n  const { id, tipo,name } = useParams();\r\n  const urlFilm =GetUrlByIdFilm(id,history)\r\n  if (urlFilm===null) history.goBack()\r\n  const ShowComponent = () => {\r\n    switch (tipo) {\r\n      case \"Personas\":\r\n        const filmspeople = GetPeopleByIdFIlm(id);//obtencion de las personas que estan en la pelicula\r\n        \r\n        return (\r\n          < >\r\n            <BackFilms history={history} name={name}/>\r\n             \r\n             <div className=\"list-cards\">\r\n             {filmspeople.length > 0 ? (\r\n             \r\n             filmspeople.map((item) =>\r\n               \r\n               <CardPeople key={item.id}   {...item}/>\r\n             ) \r\n           ) : (\r\n             <NoData/>\r\n           )}\r\n             </div>\r\n           \r\n          </>\r\n        );\r\n        case \"Especies\":\r\n          const filmsEspecie = GetEspecieByIdFIlm(id);//obtencion de las especies con el id de la pelicula\r\n          return (\r\n            <> \r\n             <BackFilms history={history} name={name}/>\r\n          <div className=\"list-cards\">\r\n            {filmsEspecie.length > 0 ? (\r\n              filmsEspecie.map((item) => <CardEspecies key={item.id} {...item} urlFilm={urlFilm}/>)\r\n            ) : (\r\n              <NoData/>\r\n              \r\n            )}\r\n          </div>\r\n          </>\r\n        );\r\n\r\n      case \"Carros\":\r\n        const car =GetCarsByUrlFilm(urlFilm)//obtencion de los vehiculos con la url de la pelicula\r\n        return (\r\n          <> \r\n           <BackFilms history={history} name={name}/>\r\n          <div className=\"list-cards\">\r\n            {car.length > 0 ? (\r\n              car.map((item) => <CardVehicles key={item.id} {...item} urlFilm={urlFilm}/>)\r\n            ) : (\r\n              <NoData/>\r\n            )}\r\n          </div>\r\n          </>\r\n        );\r\n      \r\n      case \"Lugares\":\r\n        const Filmlocations=GetLocationByUrlFilm(urlFilm)//obtencion de los lugares con la url de la pelicula\r\n       \r\n        return (\r\n        <>\r\n           <BackFilms history={history} name={name}/>\r\n          <div className=\"list-cards\">\r\n            {Filmlocations.length > 0 ? (\r\n              Filmlocations.map((item) => <CardLocations key={item.id} {...item} urlFilm={urlFilm}/>)\r\n            ) : (\r\n              <NoData/>\r\n            )}\r\n          </div>\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return <Redirect to='/'/>;\r\n    }\r\n  };\r\n  return <>{ShowComponent()}</>;\r\n};\r\n","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\n\r\nexport const GetUrlByIdFilm = (id) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {movies}=films\r\n   const movie= movies.find(item=>item.id===id)\r\nif (movie===undefined) {\r\n   \r\n   return null\r\n}\r\n return movie.url\r\n}","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\nconst verificarPelicula=(person,url)=>{\r\nconst salioPersona=person.films.filter(item=>item===url)\r\nif (salioPersona.length>0) {   \r\n    return true\r\n}\r\nreturn false\r\n}\r\n\r\nexport const GetPeopleByIdFIlm = (id) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {movies, personas}=films\r\n   const movie= movies.find(movie=>movie.id===id)//obtencion de la pelicula\r\n\r\n   const FilmPersonas=personas.filter(person=>verificarPelicula(person,movie.url)===true);//obtencion de las personas por la pelicula\r\n   console.log(FilmPersonas)\r\n   return FilmPersonas\r\n}\r\n","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\nconst verificarPelicula=(especie,movie)=>{\r\n    \r\nconst Especiefilm=especie.films.filter(item=>item===movie.url)//especies de la pelicula\r\nconst salioEspeciefilm=movie.species.filter(item=>item===especie.url)\r\nif (salioEspeciefilm.length>0&&Especiefilm.length>0) { \r\n   \r\n    return true\r\n}\r\nreturn false\r\n}\r\n\r\nexport const GetEspecieByIdFIlm = (id) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {movies, especies}=films\r\n   const movie= movies.find(movie=>movie.id===id)//obtencion de la pelicula\r\n   const FilmEspecie=especies.filter(especie=>verificarPelicula(especie,movie)===true);\r\n   return FilmEspecie\r\n}","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\n\r\nexport const GetCarsByUrlFilm = (url) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {vehiculos}=films\r\n   const Car= vehiculos.filter(car=>car.films[0]===url)//obtencion del vehiculo por la url de la pelicula\r\n   return Car\r\n}","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\n\r\nconst LugaresDeLaPelicula=(item,url)=>{\r\n   \r\n    const Esta=item.films.filter(i=>i===url)\r\n   \r\n    if (Esta.length>0) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\nexport const GetLocationByUrlFilm = (url) => {\r\n   \r\n    const {films} = useContext(GhibliContext)\r\n    const {locations}=films\r\n    return locations.filter(item=> LugaresDeLaPelicula(item,url))\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { GhibliApp } from \"../components/GhibliApp\";\r\nimport { GhibliHeader } from \"../components/GhibliHeader\";\r\nimport { RedirectComponentType } from \"../components/RedirectComponentType\";\r\n\r\n\r\n\r\nexport const GhibliRouter = () => {\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div>\r\n        <GhibliHeader /> \r\n          <Switch>\r\n            <Route exact path=\"/\" component={GhibliApp} />\r\n            <Route exact path=\"/More/:id/:tipo/:name\" component={RedirectComponentType} />\r\n            <Route  component={GhibliApp} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\nimport { useLoading } from './hooks/useLoading'\r\nimport { GhibliContext } from './reducer/GhibliContext'\r\nimport { GhibliRouter } from './router/GhibliRouter'\r\n\r\n\r\nexport const App = () => {\r\n const[films,dispatch]=useLoading()\r\n \r\n  \r\n    return (\r\n        <GhibliContext.Provider value={{films,dispatch}}>\r\n        <GhibliRouter />\r\n        </GhibliContext.Provider>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/style.scss'\nimport {App} from './App';\n\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}