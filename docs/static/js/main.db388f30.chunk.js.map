{"version":3,"sources":["reducer/GhibliContext.js","reducer/ghibliReducer.js","components/cards/GhibliCard.js","components/GhilbliGrid.js","components/GhibliApp.js","assets/img/logo.svg","components/Search.js","components/GhibliHeader.js","components/cards/CardEspecies.js","components/cards/CardLocations.js","components/cards/CardPeople.js","components/cards/CardVehicles.js","components/BackFilms.js","components/NoData.js","components/RedirectComponentType.js","helper/GetUrlByIdFilm.js","helper/GetPeopleByIdFIlm.js","helper/GetEspecieByIdFIlm.js","helper/GetCarsByIdFilm.js","helper/GetLocationByUrlFilm.js","router/GhibliRouter.js","App.js","hooks/useLoading.js","index.js"],"names":["GhibliContext","createContext","GhibliReducer","state","action","type","localStorage","setItem","JSON","stringify","payload","data","parse","getItem","movies","especies","locations","error","loading","personas","vehiculos","movieSelected","GhibliCard","id","title","original_title","original_title_romanised","description","director","producer","release_date","running_time","rt_score","people","url","className","to","GhilbliGrid","useContext","films","dispatch","length","onClick","map","item","GhibliApp","style","Menu","borderRadius","boxShadow","background","padding","fontSize","position","overflow","maxHeight","input","Search","history","useHistory","useState","search","setSearch","onSubmit","e","preventDefault","FilmSelected","filter","m","push","wrapperStyle","root","inputProps","menuStyle","getItemValue","items","renderItem","isHighlighted","shouldItemRender","value","toLowerCase","indexOf","onChange","target","onSelect","val","GhibliHeader","src","logo","alt","CardEspecies","name","classification","eye_colors","hair_colors","urlFilm","peliculas","CardLocations","surface_water","terrain","residents","climate","filtered","split","Boolean","i","TraerPersonas","CardPeople","gender","age","eye_color","hair_color","species","namePelicula","showPelicula","film","TraerPeliculas","showEspecie","especie","TraerEspecies","CardVehicles","pilot","vehicle_class","PilotoInfo","find","TraerPiloto","BackFilms","goBack","NoData","RedirectComponentType","useParams","tipo","movie","undefined","GetUrlByIdFilm","filmspeople","FilmPersonas","person","verificarPelicula","console","log","GetPeopleByIdFIlm","filmsEspecie","Especiefilm","GetEspecieByIdFIlm","car","Filmlocations","LugaresDeLaPelicula","GetLocationByUrlFilm","ShowComponent","GhibliRouter","exact","path","component","init","App","setstate","Alldata","urls","setAlldata","useEffect","Peticiones","index","element","axios","get","all","then","results","catch","useLoading","useReducer","CargarDataAlDispatch","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.db388f30.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const GhibliContext = createContext();","\r\nexport const GhibliReducer = (state={},action) => {\r\n    \r\n    switch (action.type) {\r\n       case 'loading':\r\n           localStorage.setItem('data',JSON.stringify( {...action.payload})) \r\n       return{\r\n        ...action.payload,\r\n       };\r\n       case 'Search':\r\n    return {\r\n        ...action.payload\r\n    }\r\n    case 'CargarLocalData':\r\n        const data=JSON.parse(localStorage.getItem(\"data\"))\r\n        const { movies, especies, locations, error, loading, personas, vehiculos,movieSelected } =action.payload;\r\n    \r\n        if (data) {\r\n            return{\r\n                ...data\r\n                };\r\n        }\r\n        \r\n       return{\r\n        movies,\r\n        especies,\r\n        personas,\r\n        vehiculos,\r\n        locations,\r\n        loading,\r\n        movieSelected:0,\r\n        error,\r\n       };\r\n        default:\r\n            return  state;\r\n    }\r\n   \r\n   }","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const GhibliCard = ({\r\n   id,\r\n    title,\r\n    original_title,\r\n    original_title_romanised,\r\n    description,\r\n    director,\r\n    producer,\r\n    release_date,\r\n    running_time,\r\n    rt_score,\r\n    people,\r\n    url\r\n    \r\n}) => {\r\n\r\n    return (\r\n        <div className='card animate__animated animate__fadeI mt-1 mb-1'>\r\n        \r\n                <div className='card-header'>\r\n                <h2>{title}</h2>\r\n                <h3>{original_title}</h3>\r\n                <h4>{original_title_romanised}</h4>\r\n                <hr/>\r\n                </div>\r\n                <div className='card-body'>\r\n                <p>{description}</p>\r\n                <h4>{director}</h4>\r\n                </div>\r\n                <hr/>\r\n                <div className='card-ambient mb-1 mt-1'>\r\n                    <Link className='pointer btn btn-primary'\r\n                    to={`/More/${id}/${'Personas'}/${title}`}\r\n                    >\r\n                        Personas\r\n                    </Link>\r\n                    <Link className='pointer  btn btn-primary'\r\n                    to={`/More/${id}/${'Especies'}/${title}`}\r\n                    >\r\n                        Especies\r\n                    </Link>\r\n                    <Link className='pointer  btn btn-primary'\r\n                    to={`/More/${id}/${'Lugares'}/${title}`}\r\n                    >\r\n                    Lugares\r\n                    </Link>\r\n                    <Link className='pointer  btn btn-primary'\r\n                    to={`/More/${id}/${'Carros'}/${title}`}\r\n                    >\r\n                    Vehiculos\r\n                    </Link>\r\n                </div>\r\n                <hr/>\r\n                <div className='card-footer mt-5'>\r\n                    <div>\r\n                    <h5>Productor:{producer}</h5>\r\n                    \r\n                    <h5>Lanzamiento:{release_date}</h5>\r\n                    </div>\r\n             <div>\r\n             <h5>Duracion:{running_time}</h5>\r\n                 \r\n                 <h5>Puntaje:{rt_score}</h5>\r\n             </div>\r\n                  \r\n                   \r\n                    \r\n               \r\n                </div>\r\n\r\n     \r\n        </div>\r\n    )\r\n}","import React, { useContext } from \"react\";\r\nimport { GhibliContext } from \"../reducer/GhibliContext\";\r\nimport { GhibliCard } from \"./cards/GhibliCard\";\r\n\r\nexport const GhilbliGrid = () => {\r\n  const { films, dispatch } = useContext(GhibliContext);\r\n  const { movies, movieSelected } = films;\r\n\r\n  const CargarTodasLasPeliculas = () => {\r\n    dispatch({\r\n      type: \"CargarLocalData\",\r\n      payload: films,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {movieSelected.length === 1 ? (\r\n        <div className=\"back-home\">\r\n          <button onClick={CargarTodasLasPeliculas} className=\"btn btn-primary\">\r\n            Regresar a las peliculas\r\n          </button>\r\n        </div>\r\n      ) : ''}\r\n         \r\n      <div className=\"Ghibli-Grid\">\r\n    {\r\n        movieSelected.length === 1 ?(\r\n            movieSelected.map((item) => (\r\n                <GhibliCard key={item.id} {...item} />\r\n              ))\r\n\r\n        ):( \r\n       movies.map((item) => (\r\n          <GhibliCard key={item.id} {...item} />\r\n        ))\r\n        \r\n        )\r\n\r\n        }\r\n\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react'\r\n\r\nimport { GhilbliGrid } from './GhilbliGrid'\r\n\r\n\r\nexport const GhibliApp = () => {\r\n    return (\r\n        <>\r\n        <GhilbliGrid />\r\n        </>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo.95c5236f.svg\";","import React, { useState, useContext } from \"react\";\r\nimport Autocomplete from \"react-autocomplete\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GhibliContext } from \"../reducer/GhibliContext\";\r\nconst style = {\r\n  Menu: {\r\n    borderRadius: \"3px\",\r\n    boxShadow: \"0 2px 12px rgba(0, 0, 0, 0.1)\",\r\n    background: \"rgba(255, 255, 255, 0.9)\",\r\n    padding: \"2px 0\",\r\n    fontSize: \"90%\",\r\n    position: \"fixed\",\r\n    overflow: \"auto\",\r\n    maxHeight: \"100%\",\r\n  },\r\n  input: {\r\n    className: \"text-search\",\r\n  },\r\n};\r\nexport const Search = () => {\r\n  const history = useHistory();\r\n  const { films, dispatch } = useContext(GhibliContext);\r\n  const { movies, especies, locations, error, loading, personas, vehiculos } =\r\n    films;\r\n  const [search, setSearch] = useState(\"\");\r\n  const handleItem = (e) => {\r\n    e.preventDefault();\r\n    const FilmSelected = movies.filter((m) => m.title === search);\r\n    if (FilmSelected.length!==0) {\r\n      dispatch({\r\n        type: \"Search\",\r\n        payload: {\r\n          movies,\r\n          especies,\r\n          personas,\r\n          vehiculos,\r\n          locations,\r\n          loading,\r\n          movieSelected:FilmSelected,\r\n          error,\r\n        },\r\n      });\r\n      setSearch(\"\");\r\n      history.push('/');\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <form className=\"form-search\" onSubmit={handleItem}>\r\n        <Autocomplete\r\n          wrapperStyle={style.root}\r\n          inputProps={style.input}\r\n          menuStyle={style.Menu}\r\n          getItemValue={(item) => item.title}\r\n          items={movies}\r\n          renderItem={(item, isHighlighted) => {\r\n            return (\r\n              <div\r\n                key={item.id}\r\n                style={{ background: isHighlighted ? \"lightgray\" : \"white\" }}\r\n              >\r\n                {item.title}\r\n              </div>\r\n            );\r\n          }}\r\n          shouldItemRender={(item, value) =>\r\n            item.title.toLowerCase().indexOf(value.toLowerCase()) > -1\r\n          }\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n          onSelect={(val) => setSearch(val)}\r\n        />\r\n        <button className=\"btn btn-primary\" type=\"sumbit\">\r\n          Buscar\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport logo from './../assets/img/logo.svg'\r\nimport { Search } from \"./Search\";\r\n\r\nexport const GhibliHeader = () => {\r\n  return (\r\n    <>\r\n    <div className=\"header-main\">\r\n      <div className=\"header-logo\">\r\n        <img src={logo}\r\n        alt='ghibli-logo' />\r\n      </div>\r\n    </div>\r\n    <div className=\"header-search  mt-1 mb-1\">\r\n      <Search />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GhibliContext } from \"../../reducer/GhibliContext\";\r\n\r\nexport const CardEspecies = ({\r\n  id,\r\n  name,\r\n  classification,\r\n  eye_colors,\r\n  hair_colors,\r\n  people,\r\n  films,\r\n  url,\r\n  urlFilm,\r\n}) => {\r\n  const { films: peliculas } = useContext(GhibliContext);\r\n  const { personas,especies } = peliculas;\r\n\r\n  const TraerPersonas = () => {\r\n    especies.map(item=>item.name)\r\n    const personasConIdFilm = personas.filter((e) => {\r\n      const EnLaPeli = e.films.filter((item) => item === urlFilm);\r\n      if (EnLaPeli.length > 0) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n    // const EspeciePersonajes=personasConIdFilm.filter(item=>item.species===url)\r\n    // console.log(EspeciePersonajes)\r\n    return personasConIdFilm.map((item) =>\r\n      item ? (\r\n        <ul key={item.id}>\r\n          <span>{item.name}</span>\r\n        </ul>\r\n      ) : (\r\n        <h4>NO hay personajes</h4>\r\n      )\r\n    );\r\n  };\r\n\r\n  return id ? (\r\n    <div className=\"card-people animate__animated  animate__fadeIn\">\r\n      <h3>Nombre :{name}</h3>\r\n      <hr />\r\n      <h3>Clasificacion :{classification}</h3>\r\n      <hr />\r\n      <h3>Color de ojos :{eye_colors}</h3>\r\n      <hr />\r\n      <h3>Color de Cabello :{hair_colors}</h3>\r\n      <hr />\r\n      <h3>Personajes :{TraerPersonas(people)}</h3>\r\n      <hr />\r\n    </div>\r\n  ) : (\r\n    <h1>NO Se encontraron personajes</h1>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { GhibliContext } from \"../../reducer/GhibliContext\";\r\n\r\nexport const CardLocations = ({\r\n  id,\r\n  name,\r\n  surface_water,\r\n  terrain,\r\n  residents,\r\n  climate,\r\n  urlFilm,\r\n}) => {\r\n    const { films: peliculas } = useContext(GhibliContext);\r\n  const { personas } = peliculas;\r\n    const TraerPersonas = () => {\r\n        const idPersona=residents.map(item=>item.split('/')[4] )\r\n        let filtered = idPersona.filter(Boolean);\r\n            if (filtered.length>0) {\r\n                const PersonasInfor=personas.filter(item=>{\r\n                    const value=filtered.filter(i=>i===item.id)\r\n                    if (value.length>0) {\r\n                        return true\r\n                    }\r\n                    return false\r\n                })\r\n                return PersonasInfor.map((item) =>\r\n                item ? (\r\n                  <ul key={item.id}>\r\n                    <span>{item.name}</span>\r\n                  </ul>\r\n                ) : (\r\n                  <h4>NO hay personajes</h4>\r\n                )\r\n              );\r\n            }\r\n          return residents\r\n       \r\n      };\r\n  return id ? (\r\n    <div className=\"card-carro animate__animated  animate__fadeIn\">\r\n      <h3>Nombre :{name}</h3>\r\n      <hr />\r\n      <h3>Clima :{climate}</h3>\r\n      <hr />\r\n      <h3>Terreno :{terrain}</h3>\r\n      <hr />\r\n      <div className=\"card-body-carro\">\r\n        <h3>residentes :{TraerPersonas()}</h3>\r\n      </div>\r\n      <hr />\r\n      <h3>Superficie del agua :{surface_water}</h3>\r\n      <hr />\r\n    </div>\r\n  ) : (\r\n    <h1>NO Se encontraron personajes</h1>\r\n  );\r\n};\r\n","import React, { useContext } from 'react'\r\nimport { GhibliContext } from '../../reducer/GhibliContext'\r\nexport const CardPeople = \r\n({\r\n    id,\r\n    name,\r\n    gender,\r\n    age,\r\n    eye_color,\r\n    hair_color,\r\n    films,\r\n    species,\r\n    url,\r\n    namePelicula\r\n}) => {\r\n    \r\n    const {films:peliculas} = useContext(GhibliContext)\r\n    const {movies, especies}=peliculas\r\n    const TraerEspecies=(species)=>{\r\n      const showEspecie = especies.filter(especie=>especie.url===species)\r\n        return (\r\n            <ul>\r\n            <li>Name :{showEspecie[0].name}</li>\r\n            <li>Clasificacion:{showEspecie[0].classification}</li>\r\n            <li>Ojos :{showEspecie[0].eye_colors}</li>\r\n            <li>Cabello :{showEspecie[0].hair_color}</li>\r\n            </ul>\r\n        )\r\n    }\r\n    const TraerPeliculas=(films)=>{\r\n        const showPelicula = movies.filter(film=>film.url===films[0])\r\n        return (\r\n            <ul>\r\n            <li>Name :{showPelicula[0].title}</li>\r\n            </ul>\r\n        )\r\n    }\r\n   \r\n   \r\n    return (\r\n        (id)?\r\n        <div className='card-people animate__animated  animate__fadeIn'>\r\n            <h3>Nombre :{name}</h3>\r\n            <hr/>\r\n            <h3>Genero :{gender}</h3>\r\n            <hr/>\r\n            <h3>Años :{age}</h3>\r\n            <hr/>\r\n            <h3>Color de ojos :{eye_color}</h3>\r\n            <hr/>\r\n            <h3>Color de Cabello :{hair_color}</h3>\r\n            <hr/>\r\n            <h3>Pelicula :{TraerPeliculas(films)}</h3>\r\n            <hr/>\r\n            <h3>Especies :{TraerEspecies(species)}</h3>\r\n            <hr/>\r\n        </div>:\r\n        <h1>NO Se encontraron personajes</h1>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { GhibliContext } from '../../reducer/GhibliContext'\r\n\r\nexport const CardVehicles = ({\r\n    id,\r\n    length,\r\n    name,\r\n    pilot,\r\n    vehicle_class,\r\n    description,\r\n}\r\n) => {\r\n    const {films:peliculas} = useContext(GhibliContext)\r\n    const {personas,especies}=peliculas\r\n    const TraerEspecies=(species)=>{\r\n       const tipoPiloto= especies.find(item=>item.url===species)\r\n       return tipoPiloto.classification\r\n    }\r\n    const TraerPiloto=()=>{\r\n       const PilotoInfo= personas.filter(item=>item.url===pilot)\r\n        return (\r\n            <ul>\r\n            <li>Name :{PilotoInfo[0].name}</li>\r\n            <li>especie:{TraerEspecies(PilotoInfo[0].species)}</li>\r\n            <li>Ojos :{PilotoInfo[0].eye_color}</li>\r\n            <li>Cabello :{PilotoInfo[0].hair_color}</li>\r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    return (\r\n        (id)?\r\n        <div className='card-carro animate__animated  animate__fadeIn'>\r\n            <h3>Nombre :{name}</h3>\r\n            <hr/>\r\n            <h3>Largo :{length}</h3>\r\n            <hr/>\r\n            <h3>Clase :{vehicle_class}</h3>\r\n            <hr/>\r\n            <div className='card-body-carro'>\r\n\r\n            <h3>Descripcion :{description}</h3>\r\n            </div>\r\n            <hr/>\r\n            <h3>Piloto :{TraerPiloto(pilot)}</h3>\r\n            <hr/>\r\n        </div>:\r\n        <h1>NO Se encontraron personajes</h1>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport const BackFilms = ({\r\n    name,\r\n    history\r\n}) => {\r\n \r\n    return (\r\n        <div className='title-list'>\r\n              <div className='goback-button'>\r\n                <button className='btn btn-primary' onClick={()=>history.goBack()}>Regresar</button>\r\n              </div>\r\n              <div className='name-title'>\r\n              <h1>{name}</h1>\r\n              </div>\r\n           \r\n            </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const NoData = () => {\r\n    return (\r\n        <div className='no-data'>\r\n\r\n               <h1>No existen Datos</h1>\r\n\r\n               <Link to=\"/\" className='btn btn-primary no-data-buton'>Regresar</Link>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport {  Redirect, useParams } from \"react-router-dom\";\r\nimport { GetCarsByUrlFilm } from \"../helper/GetCarsByIdFilm\";\r\nimport { GetEspecieByIdFIlm } from \"../helper/GetEspecieByIdFIlm\";\r\nimport { GetLocationByUrlFilm } from \"../helper/GetLocationByUrlFilm\";\r\nimport { GetPeopleByIdFIlm } from \"../helper/GetPeopleByIdFIlm\";\r\nimport { GetUrlByIdFilm } from \"../helper/GetUrlByIdFilm\";\r\nimport { CardEspecies } from \"./cards/CardEspecies\";\r\nimport { CardLocations } from \"./cards/CardLocations\";\r\nimport { CardPeople } from \"./cards/CardPeople\";\r\nimport { CardVehicles } from \"./cards/CardVehicles\";\r\nimport { BackFilms } from \"./BackFilms\";\r\nimport { NoData } from \"./NoData\";\r\n\r\n\r\n//redireccionamiento y carga de datos para las cards\r\nexport const RedirectComponentType = ({history}) => {\r\n  \r\n  const { id, tipo,name } = useParams();\r\n  const urlFilm =GetUrlByIdFilm(id,history)\r\n  if (urlFilm===null) history.goBack()\r\n  const ShowComponent = () => {\r\n    switch (tipo) {\r\n      case \"Personas\":\r\n        const filmspeople = GetPeopleByIdFIlm(id);//obtencion de las personas que estan en la pelicula\r\n        \r\n        return (\r\n          < >\r\n            <BackFilms history={history} name={name}/>\r\n             \r\n             <div className=\"list-cards\">\r\n             {filmspeople.length > 0 ? (\r\n             \r\n             filmspeople.map((item) =>\r\n               \r\n               <CardPeople key={item.id}   {...item}/>\r\n             ) \r\n           ) : (\r\n             <NoData/>\r\n           )}\r\n             </div>\r\n           \r\n          </>\r\n        );\r\n        case \"Especies\":\r\n          const filmsEspecie = GetEspecieByIdFIlm(id);//obtencion de las especies con el id de la pelicula\r\n          return (\r\n            <> \r\n             <BackFilms history={history} name={name}/>\r\n          <div className=\"list-cards\">\r\n            {filmsEspecie.length > 0 ? (\r\n              filmsEspecie.map((item) => <CardEspecies key={item.id} {...item} urlFilm={urlFilm}/>)\r\n            ) : (\r\n              <NoData/>\r\n              \r\n            )}\r\n          </div>\r\n          </>\r\n        );\r\n\r\n      case \"Carros\":\r\n        const car =GetCarsByUrlFilm(urlFilm)//obtencion de los vehiculos con la url de la pelicula\r\n        return (\r\n          <> \r\n           <BackFilms history={history} name={name}/>\r\n          <div className=\"list-cards\">\r\n            {car.length > 0 ? (\r\n              car.map((item) => <CardVehicles key={item.id} {...item} urlFilm={urlFilm}/>)\r\n            ) : (\r\n              <NoData/>\r\n            )}\r\n          </div>\r\n          </>\r\n        );\r\n      \r\n      case \"Lugares\":\r\n        const Filmlocations=GetLocationByUrlFilm(urlFilm)//obtencion de los lugares con la url de la pelicula\r\n       \r\n        return (\r\n        <>\r\n           <BackFilms history={history} name={name}/>\r\n          <div className=\"list-cards\">\r\n            {Filmlocations.length > 0 ? (\r\n              Filmlocations.map((item) => <CardLocations key={item.id} {...item} urlFilm={urlFilm}/>)\r\n            ) : (\r\n              <NoData/>\r\n            )}\r\n          </div>\r\n          </>\r\n        );\r\n\r\n      default:\r\n        return <Redirect to='/'/>;\r\n    }\r\n  };\r\n  return <>{ShowComponent()}</>;\r\n};\r\n","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\n\r\nexport const GetUrlByIdFilm = (id) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {movies}=films\r\n   const movie= movies.find(item=>item.id===id)\r\nif (movie===undefined) {\r\n   \r\n   return null\r\n}\r\n return movie.url\r\n}","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\nconst verificarPelicula=(person,url)=>{\r\nconst salioPersona=person.films.filter(item=>item===url)\r\nif (salioPersona.length>0) {   \r\n    return true\r\n}\r\nreturn false\r\n}\r\n\r\nexport const GetPeopleByIdFIlm = (id) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {movies, personas}=films\r\n   const movie= movies.find(movie=>movie.id===id)//obtencion de la pelicula\r\n\r\n   const FilmPersonas=personas.filter(person=>verificarPelicula(person,movie.url)===true);//obtencion de las personas por la pelicula\r\n   console.log(FilmPersonas)\r\n   return FilmPersonas\r\n}\r\n","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\nconst verificarPelicula=(especie,movie)=>{\r\n    \r\nconst Especiefilm=especie.films.filter(item=>item===movie.url)//especies de la pelicula\r\nconst salioEspeciefilm=movie.species.filter(item=>item===especie.url)\r\nif (salioEspeciefilm.length>0&&Especiefilm.length>0) { \r\n   \r\n    return true\r\n}\r\nreturn false\r\n}\r\n\r\nexport const GetEspecieByIdFIlm = (id) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {movies, especies}=films\r\n   const movie= movies.find(movie=>movie.id===id)//obtencion de la pelicula\r\n   const FilmEspecie=especies.filter(especie=>verificarPelicula(especie,movie)===true);\r\n   return FilmEspecie\r\n}","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\n\r\nexport const GetCarsByUrlFilm = (url) => {\r\n    const {films} = useContext(GhibliContext)\r\n    const {vehiculos}=films\r\n   const Car= vehiculos.filter(car=>car.films[0]===url)//obtencion del vehiculo por la url de la pelicula\r\n   return Car\r\n}","import { useContext } from \"react\"\r\nimport { GhibliContext } from \"../reducer/GhibliContext\"\r\n\r\nconst LugaresDeLaPelicula=(item,url)=>{\r\n   \r\n    const Esta=item.films.filter(i=>i===url)\r\n   \r\n    if (Esta.length>0) {\r\n        return true\r\n    }\r\n    return false\r\n}\r\nexport const GetLocationByUrlFilm = (url) => {\r\n   \r\n    const {films} = useContext(GhibliContext)\r\n    const {locations}=films\r\n    return locations.filter(item=> LugaresDeLaPelicula(item,url))\r\n}\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { GhibliApp } from \"../components/GhibliApp\";\r\nimport { GhibliHeader } from \"../components/GhibliHeader\";\r\nimport { RedirectComponentType } from \"../components/RedirectComponentType\";\r\n\r\n\r\n\r\nexport const GhibliRouter = () => {\r\n\r\n  return (\r\n    <>\r\n      <Router>\r\n        <div>\r\n        <GhibliHeader /> \r\n          <Switch>\r\n            <Route exact path=\"/\" component={GhibliApp} />\r\n            <Route exact path=\"/More/:id/:tipo/:name\" component={RedirectComponentType} />\r\n            <Route  component={GhibliApp} />\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </>\r\n  );\r\n};\r\n","import React, {  useReducer, useState } from 'react'\r\nimport { useLoading } from './hooks/useLoading'\r\nimport { GhibliContext } from './reducer/GhibliContext'\r\nimport { GhibliReducer } from './reducer/ghibliReducer'\r\nimport { GhibliRouter } from './router/GhibliRouter'\r\n\r\nconst init = () => {\r\n  return (\r\n    JSON.parse(localStorage.getItem(\"data\")) \r\n  );\r\n};\r\n\r\nconst CargarDataAlDispatch=(dispatch,Alldata)=>{\r\n    dispatch({\r\n        type: \"loading\",\r\n        payload:Alldata\r\n      });\r\n}\r\n\r\nexport const App = () => {\r\n    const [state, setstate] = useState(true)\r\n \r\n const Alldata=useLoading()\r\n const [films, dispatch] = useReducer(GhibliReducer, {}, init);\r\n    if (!Alldata.loading&&state) { \r\n        CargarDataAlDispatch(dispatch,Alldata)\r\n        return setstate(false)\r\n  }\r\n\r\n    return (\r\n       (!Alldata.loading)?(\r\n        <GhibliContext.Provider value={{films,dispatch}}>\r\n        <GhibliRouter />\r\n        </GhibliContext.Provider>):\r\n    <h1>..loading</h1>\r\n    )\r\n}","import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\n\r\nexport const useLoading = () => {\r\n  const urls = [\r\n    \"https://ghibliapi.herokuapp.com/films/\",\r\n    \"https://ghibliapi.herokuapp.com/species/\",\r\n    \"https://ghibliapi.herokuapp.com/people/\",\r\n    \"https://ghibliapi.herokuapp.com/vehicles/\",\r\n    \"https://ghibliapi.herokuapp.com/locations/\",\r\n  ];\r\n\r\n  const [Alldata, setAlldata] = useState({\r\n    movies: null,\r\n    especies: null,\r\n    personas: null,\r\n    vehiculos: null,\r\n    locations: true,\r\n    loading: true,\r\n    movieSelected:0,\r\n    error: null\r\n   });\r\n\r\n  useEffect(() => {\r\n    setAlldata({\r\n      movies: null,\r\n      especies: null,\r\n      personas: null,\r\n      vehiculos: null,\r\n      locations: true, \r\n      loading: true,\r\n      movieSelected:0,\r\n      error: null\r\n     });\r\n\r\n    let Peticiones = [];\r\n \r\n    for (let index = 0; index < urls.length; index++) {\r\n      const element = urls[index];\r\n      Peticiones.push(axios.get(element));\r\n    }\r\n    axios.all(Peticiones).then(function (results) {\r\n      setAlldata({\r\n          movies: results[0].data,\r\n          especies: results[1].data,\r\n          personas: results[2].data,\r\n          vehiculos: results[3].data,\r\n          locations: results[4].data, \r\n          loading: false,\r\n          movieSelected:0,\r\n          error: null\r\n         });\r\n        \r\n    })\r\n    .catch( (e) => {\r\n      console.log('entro al error',e)\r\n      setAlldata({\r\n        movies: null,\r\n        especies: null,\r\n        personas: null,\r\n        vehiculos: null,\r\n        locations: true, \r\n        loading: true,\r\n        movieSelected:0,\r\n        error: 'No se cargaron los datos'\r\n       });\r\n  })\r\n\r\n  }, []);\r\n\r\n  return Alldata;\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/style/style.scss'\nimport {App} from './App';\n\n\nReactDOM.render(\n    <App />\n ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}